services:
    api:
        build:
            context: .
            dockerfile: Dockerfile
        env_file:
            - .env
        ports:
            - "${API_PORT:-8080}:8080"
        environment:
            - DB_HOST=${DB_HOST:-postgres}
            - DB_PORT=${DB_PORT:-5432}
            - DB_USER=${DB_USER:-postgres}
            - DB_PASSWORD=${DB_PASSWORD:-postgres}
            - DB_NAME=${DB_NAME:-grocery}
            - DB_SSLMODE=${DB_SSLMODE:-disable}
            - JWT_SECRET=${JWT_SECRET}
            - JWT_ISSUER=${JWT_ISSUER:-grocery-service}
            - SMS_ENVIRONMENT=${SMS_ENVIRONMENT:-sandbox}
            - TEST_DB_HOST=${TEST_DB_HOST:-postgres}
            - TEST_DB_PORT=${TEST_DB_PORT:-5432}
            - TEST_DB_NAME=${TEST_DB_NAME:-grocery_test}
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - .:/grocery-service
        networks:
            - grocery-network

    postgres:
        image: postgres:15-alpine
        hostname: postgres
        ports:
            - "${DB_PORT_EXTERNAL:-5433}:5432"
        environment:
            - POSTGRES_USER=${DB_USER:-postgres}
            - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
            - POSTGRES_MULTIPLE_DATABASES=${DB_NAME:-grocery},${TEST_DB_NAME:-grocery_test}
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./scripts/init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
        networks:
            - grocery-network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
            interval: 5s
            timeout: 5s
            retries: 5

    pgadmin:
        image: dpage/pgadmin4
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-nehigna@gmail.com}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
            - PGADMIN_CONFIG_SERVER_MODE=False
            - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
            - PGADMIN_SERVER_JSON_FILE=/pgadmin4/servers.json
        ports:
            - "${PGADMIN_PORT:-5050}:80"
        volumes:
            - ./config/pgadmin/servers.json:/pgadmin4/servers.json
            - pgadmin_data:/var/lib/pgadmin
        depends_on:
            - postgres
        networks:
            - grocery-network

volumes:
    postgres_data:
    pgadmin_data:

networks:
    grocery-network:
        driver: bridge
