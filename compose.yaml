services:
    api:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        environment:
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_USER=postgres
            - DB_PASSWORD=postgres
            - DB_NAME=grocery
            - DB_SSLMODE=disable
            - JWT_SECRET=your-secret-key
            - JWT_ISSUER=grocery-service
            - SMS_ENVIRONMENT=sandbox
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - .:/app
        networks:
            - grocery-network

    postgres:
        image: postgres:15-alpine
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=grocery
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - grocery-network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

    pgadmin:
        image: dpage/pgadmin4
        environment:
            - PGADMIN_DEFAULT_EMAIL=admin@grocery.com
            - PGADMIN_DEFAULT_PASSWORD=admin
        ports:
            - "5050:80"
        depends_on:
            - postgres
        networks:
            - grocery-network

volumes:
    postgres_data:

networks:
    grocery-network:
        driver: bridge
