basePath: /api/v1
definitions:
  github_com_grocery-service_internal_domain.AuthResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
      user:
        $ref: '#/definitions/github_com_grocery-service_internal_domain.User'
    type: object
  github_com_grocery-service_internal_domain.Category:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      level:
        type: integer
      name:
        type: string
      parent_id:
        type: string
      path:
        type: string
      sub_categories:
        items:
          $ref: '#/definitions/github_com_grocery-service_internal_domain.Category'
        type: array
      updated_at:
        type: string
    type: object
  github_com_grocery-service_internal_domain.Customer:
    properties:
      created_at:
        type: string
      id:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/github_com_grocery-service_internal_domain.User'
      user_id:
        type: string
    type: object
  github_com_grocery-service_internal_domain.Order:
    properties:
      created_at:
        type: string
      customer:
        $ref: '#/definitions/github_com_grocery-service_internal_domain.Customer'
      customer_id:
        type: string
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/github_com_grocery-service_internal_domain.OrderItem'
        type: array
      status:
        $ref: '#/definitions/github_com_grocery-service_internal_domain.OrderStatus'
      total_price:
        type: number
      updated_at:
        type: string
    type: object
  github_com_grocery-service_internal_domain.OrderItem:
    properties:
      created_at:
        type: string
      id:
        type: string
      order_id:
        type: string
      price:
        type: number
      product:
        $ref: '#/definitions/github_com_grocery-service_internal_domain.Product'
      product_id:
        type: string
      quantity:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_grocery-service_internal_domain.OrderStatus:
    enum:
    - PENDING
    - CONFIRMED
    - PREPARING
    - READY
    - SHIPPED
    - DELIVERED
    - CANCELLED
    - REFUNDED
    - FAILED
    type: string
    x-enum-varnames:
    - OrderStatusPending
    - OrderStatusConfirmed
    - OrderStatusPreparing
    - OrderStatusReady
    - OrderStatusShipped
    - OrderStatusDelivered
    - OrderStatusCancelled
    - OrderStatusRefunded
    - OrderStatusFailed
  github_com_grocery-service_internal_domain.Product:
    properties:
      category:
        $ref: '#/definitions/github_com_grocery-service_internal_domain.Category'
      category_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_grocery-service_internal_domain.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  github_com_grocery-service_internal_domain.User:
    properties:
      address:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
      picture:
        type: string
      role:
        $ref: '#/definitions/github_com_grocery-service_internal_domain.UserRole'
      updated_at:
        type: string
    type: object
  github_com_grocery-service_internal_domain.UserRole:
    enum:
    - admin
    - customer
    type: string
    x-enum-varnames:
    - AdminRole
    - CustomerRole
  github_com_grocery-service_utils_api.Response:
    description: Standard API response structure
    properties:
      data: {}
      error:
        example: Invalid request parameters
        type: string
      success:
        example: true
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing grocery store operations
  title: Grocery Service API
  version: "1.0"
paths:
  /auth/callback:
    get:
      description: Handle OpenID callback and create session
      parameters:
      - description: Authorization code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.AuthResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: OpenID Connect callback
      tags:
      - auth
  /auth/login:
    get:
      description: Redirect to OpenID provider login page
      produces:
      - application/json
      responses:
        "302":
          description: Found
      summary: OpenID Connect login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Get new access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: refresh
        required: true
        schema:
          $ref: '#/definitions/github_com_grocery-service_internal_domain.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.AuthResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Refresh token
      tags:
      - auth
  /auth/revoke:
    post:
      description: Invalidate the current session token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      security:
      - Bearer: []
      summary: Revoke token
      tags:
      - auth
  /categories:
    get:
      consumes:
      - application/json
      description: Get a list of all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_grocery-service_internal_domain.Category'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: List all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Create a new category with the provided data
      parameters:
      - description: Category object
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/github_com_grocery-service_internal_domain.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.Category'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Create a new category
      tags:
      - categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a category by its ID
      parameters:
      - description: Category ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Delete a category
      tags:
      - categories
    get:
      consumes:
      - application/json
      description: Get a category's details by its ID
      parameters:
      - description: Category ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.Category'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Get a category by ID
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Update an existing category's details
      parameters:
      - description: Category ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Category object
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/github_com_grocery-service_internal_domain.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.Category'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Update a category
      tags:
      - categories
  /categories/{id}/subcategories:
    get:
      consumes:
      - application/json
      description: Get all subcategories for a given parent category ID
      parameters:
      - description: Parent Category ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_grocery-service_internal_domain.Category'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: List subcategories
      tags:
      - categories
  /customers:
    get:
      consumes:
      - application/json
      description: Get a list of all customers (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_grocery-service_internal_domain.Customer'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      security:
      - Bearer: []
      summary: List all customers
      tags:
      - customers
    post:
      consumes:
      - application/json
      description: Create a customer profile for the authenticated user
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.Customer'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      security:
      - Bearer: []
      summary: Create customer profile
      tags:
      - customers
  /customers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a customer profile by ID (admin only)
      parameters:
      - description: Customer ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      security:
      - Bearer: []
      summary: Delete a customer
      tags:
      - customers
    get:
      consumes:
      - application/json
      description: Get a customer profile by ID (admin only)
      parameters:
      - description: Customer ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.Customer'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      security:
      - Bearer: []
      summary: Get customer by ID
      tags:
      - customers
  /customers/me:
    get:
      consumes:
      - application/json
      description: Get the customer profile for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.Customer'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      security:
      - Bearer: []
      summary: Get current customer profile
      tags:
      - customers
  /orders:
    get:
      consumes:
      - application/json
      description: Get a list of all orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_grocery-service_internal_domain.Order'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: List all orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create a new order with the provided data
      parameters:
      - description: Order object
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/github_com_grocery-service_internal_domain.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.Order'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Create a new order
      tags:
      - orders
  /orders/{id}:
    get:
      consumes:
      - application/json
      description: Get an order's details by its ID
      parameters:
      - description: Order ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.Order'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Get an order by ID
      tags:
      - orders
  /orders/{id}/items:
    post:
      consumes:
      - application/json
      description: Add a new item to an existing order
      parameters:
      - description: Order ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Order item object
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/github_com_grocery-service_internal_domain.OrderItem'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.OrderItem'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Add order item
      tags:
      - orders
  /orders/{id}/items/{itemID}:
    delete:
      consumes:
      - application/json
      description: Remove an item from an existing order
      parameters:
      - description: Order ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Item ID
        format: uuid
        in: path
        name: itemID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Remove order item
      tags:
      - orders
  /orders/{id}/status:
    put:
      consumes:
      - application/json
      description: Update the status of an existing order
      parameters:
      - description: Order ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Status object
        in: body
        name: status
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Update order status
      tags:
      - orders
  /orders/customer/{customerID}:
    get:
      consumes:
      - application/json
      description: Get all orders for a specific customer
      parameters:
      - description: Customer ID
        format: uuid
        in: path
        name: customerID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_grocery-service_internal_domain.Order'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: List customer orders
      tags:
      - orders
  /products:
    get:
      consumes:
      - application/json
      description: Get a list of all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_grocery-service_internal_domain.Product'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: List all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product with the provided data
      parameters:
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/github_com_grocery-service_internal_domain.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by its ID
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Delete a product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get a product's details by its ID
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Get a product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update an existing product's details
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/github_com_grocery-service_internal_domain.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_grocery-service_internal_domain.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Update a product
      tags:
      - products
  /products/{id}/stock:
    put:
      consumes:
      - application/json
      description: Update the stock quantity of a product
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Stock update request
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: Update product stock
      tags:
      - products
  /products/category/{categoryID}:
    get:
      consumes:
      - application/json
      description: Get all products in a specific category
      parameters:
      - description: Category ID
        format: uuid
        in: path
        name: categoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_grocery-service_internal_domain.Product'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_grocery-service_utils_api.Response'
      summary: List products by category
      tags:
      - products
securityDefinitions:
  bearerAuth:
    description: Enter the token with the `Bearer ` prefix, e.g. "Bearer abcde12345".
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
